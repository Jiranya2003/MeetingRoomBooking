const express = require('express');
const router = express.Router();
const bookingController = require('../controllers/bookingController');
const { verifyToken, checkAdminRole, checkUserRole } = require('../middlewares/authMiddleware');

// -----------------------------------------------------------------
// Route ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô / ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
// GET /api/bookings/available?room_id=X&date=Y
// -----------------------------------------------------------------
router.get('/available', verifyToken, bookingController.getExistingBookingsByRoomAndDate);

// -----------------------------------------------------------------
// ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (User) Routes
// -----------------------------------------------------------------
// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
// üìå ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: verifyToken ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô checkUserRole ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ req.user ‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Role
router.post('/', verifyToken, checkUserRole, bookingController.createBooking); 

// ‡∏î‡∏∂‡∏á booking ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
router.get('/my-bookings', verifyToken, bookingController.getMyBookings);

// ‡∏•‡∏ö booking ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏é‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å)
router.delete('/:id', verifyToken, checkUserRole, bookingController.deleteBooking);

// -----------------------------------------------------------------
// Admin Routes
// -----------------------------------------------------------------
// ‡∏î‡∏∂‡∏á booking ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get('/', verifyToken, checkAdminRole, bookingController.getAllBookings);

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ booking (Admin ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ IN_USE ‡∏´‡∏£‡∏∑‡∏≠ COMPLETED)
router.patch('/:id/status', verifyToken, checkAdminRole, bookingController.updateStatus);

module.exports = router;