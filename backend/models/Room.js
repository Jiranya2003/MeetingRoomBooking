const db = require('../config/db');

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô (‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∑‡∏≠ 'rooms' ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô phpMyAdmin)
const TABLE_NAME = 'rooms'; 
const ROOM_FIELDS = ['name', 'location', 'capacity', 'description', 'equipment']; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

async function getAllRooms() {
¬†   const [rows] = await db.query(`SELECT * FROM ${TABLE_NAME} ORDER BY id`);
¬†   return rows;
}

async function getRoomById(id) {
¬†   const [rows] = await db.query(`SELECT * FROM ${TABLE_NAME} WHERE id = ?`, [id]);
¬†   return rows[0];
}

async function createRoom({ name, location, capacity, description, equipment }) {
¬†   const [res] = await db.query(
        `INSERT INTO ${TABLE_NAME} (name, location, capacity, description, equipment) VALUES (?, ?, ?, ?, ?)`, 
        [name, location, capacity, description, equipment]
    );
¬†   return res.insertId;
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Whitelisting ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
 * @param {number} id - Room ID
 * @param {object} fields - Object ‡∏ó‡∏µ‡πà‡∏°‡∏µ fields ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
 */
async function updateRoom(id, fields) {
¬†   const keys = Object.keys(fields);
¬†   
    // üí° ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á: ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï (Whitelisting)
    const filteredKeys = keys.filter(key => ROOM_FIELDS.includes(key));
    const filteredValues = filteredKeys.map(key => fields[key]);
    
¬†   if (filteredKeys.length === 0) return;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á string ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SET: "key1 = ?, key2 = ?, ..."
¬†   const setStr = filteredKeys.map(k => `${k} = ?`).join(', ');

    // ‡∏£‡∏±‡∏ô Query: [...filteredValues] ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô setStr, ‡πÅ‡∏•‡∏∞ id ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô WHERE
¬†   await db.query(`UPDATE ${TABLE_NAME} SET ${setStr} WHERE id = ?`, [...filteredValues, id]);
}

async function deleteRoom(id) {
¬†   await db.query(`DELETE FROM ${TABLE_NAME} WHERE id = ?`, [id]);
}

module.exports = { getAllRooms, getRoomById, createRoom, updateRoom, deleteRoom };