const db = require('../config/db');

// ‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏à‡∏≠‡∏á‡∏ã‡πâ‡∏≥
const ACTIVE_STATUSES = ['pending', 'confirmed']; 

/**
 * Model ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (Bookings) ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MySQL
 */

// -----------------------------------------------------------------
// 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô (Overlap Check)
// -----------------------------------------------------------------
async function hasOverlap(room_id, start_time, end_time) {
    const [rows] = await db.query(
        `SELECT id FROM bookings 
         WHERE room_id = ? 
         AND status IN (?) 
         AND ( (start_time < ?) AND (end_time > ?)) 
         LIMIT 1`,
        [room_id, ACTIVE_STATUSES, end_time, start_time] 
    );
    return rows.length > 0;
}

// -----------------------------------------------------------------
// 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
// -----------------------------------------------------------------
async function createBooking({ user_id, room_id, start_time, end_time, status = 'pending' }) {
    const [res] = await db.query(
        'INSERT INTO bookings (user_id, room_id, start_time, end_time, status) VALUES (?, ?, ?, ?, ?)', 
        [user_id, room_id, start_time, end_time, status]
    );
    return res.insertId;
}

// -----------------------------------------------------------------
// 3. ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö MyBookingsPage)
// -----------------------------------------------------------------
async function getBookingsByUser(user_id) {
    const [rows] = await db.query(
        'SELECT b.*, r.name AS room_name FROM bookings b JOIN rooms r ON b.room_id = r.id WHERE b.user_id = ? ORDER BY start_time DESC', 
        [user_id]
    );
    return rows;
}

// -----------------------------------------------------------------
// 4. ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AdminDashboard)
// -----------------------------------------------------------------
async function getAllBookings() {
    const [rows] = await db.query(
        'SELECT b.*, r.name AS room_name, u.name AS user_name FROM bookings b JOIN rooms r ON b.room_id = r.id JOIN users u ON b.user_id = u.id ORDER BY start_time DESC'
    );
    return rows;
}

// -----------------------------------------------------------------
// 5. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Calendar/Time Slot Grid)
// -----------------------------------------------------------------
async function getExistingBookingsByRoomAndDate(room_id, date) {
    const startOfDay = `${date} 00:00:00`;
    const endOfDay = `${date} 23:59:59`;

    const [rows] = await db.query(
        // üö® ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏•‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'title' ‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Error 1054
        `SELECT id, start_time, end_time, status, user_id, room_id 
         FROM bookings 
         WHERE room_id = ? 
         AND status IN ('pending', 'confirmed', 'completed', 'cancelled') 
         AND start_time BETWEEN ? AND ?
         ORDER BY start_time ASC`,
        [room_id, startOfDay, endOfDay]
    );
    return rows;
}

// -----------------------------------------------------------------
// 6. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô)
// -----------------------------------------------------------------
async function updateBookingStatus(id, status) {
    const [res] = await db.query(
        'UPDATE bookings SET status = ? WHERE id = ?',
        [status, id]
    );
    return res.affectedRows; // ‡∏™‡πà‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
}

// -----------------------------------------------------------------
// 7. ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
// -----------------------------------------------------------------
async function deleteBooking(id) {
    await db.query('DELETE FROM bookings WHERE id = ?', [id]);
}

// -----------------------------------------------------------------
// 8. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ï‡∏≤‡∏° ID
// -----------------------------------------------------------------
async function getBookingById(id) {
    const [rows] = await db.query('SELECT * FROM bookings WHERE id = ?', [id]);
    return rows[0];
}


module.exports = {
    hasOverlap,
    createBooking,
    getBookingsByUser,
    getAllBookings,
    getExistingBookingsByRoomAndDate,
    updateBookingStatus, 
    deleteBooking,
    getBookingById 
};