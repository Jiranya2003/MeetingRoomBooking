import React, { useState } from 'react';
import { login } from '../api/authService';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import './LoginPage.css';

export default function LoginPage() {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState(null);
    const [message, setMessage] = useState('');
    
    const nav = useNavigate();
    const { refetchUser } = useAuth(); // ‡∏î‡∏∂‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Context

    const onSubmit = async (e) => {
        e.preventDefault();
        setError(null);
        setMessage('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...');
        
        try {
            // 1. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API: ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Token ‡πÉ‡∏ô localStorage
            await login(email, password);
            
            // 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Context: ‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤ Context ‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            await refetchUser(); 
            
            // 3. ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ‡∏•‡∏ö setTimeout ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
            setMessage('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≥‡∏ó‡∏≤‡∏á...');
            // üí° ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏´‡∏•‡∏±‡∏á Context ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
            nav('/'); 
            
        } catch (err) { 
            // 4. ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å API (400, 401, 500)
            setMessage('');
            const apiError = err?.response?.data?.message;

            if (err.response && (err.response.status === 400 || err.response.status === 401)) {
                // 400/401: Invalid Credentials (‡∏ï‡∏≤‡∏° Backend ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
                setError(apiError || '‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            } else {
                // Error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ (Server Error 500 ‡∏´‡∏£‡∏∑‡∏≠ Network)
                setError('‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢/‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');
            }
        }
    };

    return (
        <div className="login-container">
            <div className="login-card">
                <h2>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>
                
                {error && <div className="error-message">{error}</div>}
                {message && !error && <div className="status-message">{message}</div>}

                <form onSubmit={onSubmit}>
                    <div className="form-group">
                        <label htmlFor="email">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
                        <input 
                            id="email"
                            type="email"
                            value={email} 
                            onChange={e => setEmail(e.target.value)} 
                            required
                        />
                    </div>
                    
                    <div className="form-group">
                        <label htmlFor="password">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
                        <input 
                            id="password"
                            type="password" 
                            value={password} 
                            onChange={e => setPassword(e.target.value)} 
                            required
                        />
                    </div>
                    
                    <button type="submit" className="login-button" disabled={message.includes('‡∏Å‡∏≥‡∏•‡∏±‡∏á')}>
                        ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                    </button>
                </form>

                <p className="register-link">
                    ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ? <a href="/register">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</a>
                </p>
            </div>
        </div>
    );
}