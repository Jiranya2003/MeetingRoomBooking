import React from 'react';
import { NavLink } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import { 
    Calendar, 
    Users, 
    Briefcase, 
    LayoutDashboard, 
    LogOut, 
    DoorOpen, 
    FileText // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö All Bookings
} from 'lucide-react';

export default function Sidebar() {
    const { currentUser, isAuthenticated, logout } = useAuth();
    
    if (!isAuthenticated) return null;
    const isAdmin = currentUser?.role === 'admin';

    // 1. ‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User/Employee/Admin
    const menuItems = [
        // Path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
        { to: '/calendar', label: '‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á', icon: <Calendar /> },
        // Path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≤‡∏Å /MyBookingsPage ‡πÄ‡∏õ‡πá‡∏ô /my-bookings)
        { to: '/my-bookings', label: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', icon: <Briefcase /> },
        // üÜï ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏à‡∏≠‡∏á Meeting Room ‡πÉ‡∏´‡∏°‡πà
        { to: '/meeting-booking', label: '‡∏à‡∏≠‡∏á Meeting Room', icon: <DoorOpen /> },
    ];

    // 2. ‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ (Admin Only)
    const adminItems = [
        // Path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Admin Dashboard
        { to: '/admin', label: 'Dashboard', icon: <LayoutDashboard /> },
        // Path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÄ‡∏î‡∏¥‡∏°
        { to: '/admin/room-management', label: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°', icon: <DoorOpen /> },
        // üÜï ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Meeting Room ‡πÉ‡∏´‡∏°‡πà
        // { to: '/admin/meeting-room-management', label: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á', icon: <DoorOpen /> },
        // Path ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        { to: '/admin/all-bookings', label: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', icon: <FileText /> },
        // (‡∏•‡∏∞‡πÄ‡∏ß‡πâ‡∏ô /users ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ Controller ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User Management)
    ];

    return (
        <div className="sidebar">
            <h4 className="sidebar-header">‡πÄ‡∏°‡∏ô‡∏π</h4>
            <div className="sidebar-links">
                {/* User/Employee Menus */}
                {menuItems.map(item => (
                    <NavLink
                        key={item.to}
                        to={item.to}
                        className={({ isActive }) => isActive ? 'sidebar-link active' : 'sidebar-link'}
                    >
                        <span className="link-icon">{item.icon}</span> {item.label}
                    </NavLink>
                ))}

                {/* Admin Menus */}
                {isAdmin && (
                    <>
                        <div className="sidebar-separator">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</div>
                        {adminItems.map(item => (
                            <NavLink
                                key={item.to}
                                to={item.to}
                                className={({ isActive }) => isActive ? 'sidebar-link active' : 'sidebar-link'}
                            >
                                <span className="link-icon">{item.icon}</span> {item.label}
                            </NavLink>
                        ))}
                    </>
                )}

                {/* Logout Button */}
                <button className="sidebar-link logout-btn" onClick={logout}>
                    <span className="link-icon"><LogOut /></span> ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                </button>
            </div>
        </div>
    );
}
